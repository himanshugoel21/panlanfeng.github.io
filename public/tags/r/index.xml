<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on A minimal Hugo website</title>
    <link>/tags/r/</link>
    <description>Recent content in R on A minimal Hugo website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Mar 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>最简单的方法制作分形图形</title>
      <link>/post/2012/03/28/%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E6%96%B9%E6%B3%95%E5%88%B6%E4%BD%9C%E5%88%86%E5%BD%A2%E5%9B%BE%E5%BD%A2/</link>
      <pubDate>Wed, 28 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>/post/2012/03/28/%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E6%96%B9%E6%B3%95%E5%88%B6%E4%BD%9C%E5%88%86%E5%BD%A2%E5%9B%BE%E5%BD%A2/</guid>
      <description>记得之前在 Matrix67 的博客上看过一个用三台摄影机制作分形图形的视频。原理很简单，每台摄影机都拍摄同一块大屏幕的内容，而大屏幕分三块，每块都显示摄像机拍摄的内容。这个想法太巧妙了，不用任何复杂的数学推导和编程就能画出复杂的图形。视频的原目的是为了不编程画分形，可惜三台摄影机比一台笔记本电脑贵多了。利用这个原理，用 R 能模拟实现这样的过程。
首先用 grid 包的 viewport 函数把一块屏幕分成三份，然后每份按照同样的方法再分成三份，如此递归下去，在最后一层放一个最简单的三角形或任何小图形。这样就可以跟视频中一样的方法在 R 里画出分形图形。还可以把图形或者是屏幕进行旋转得到更炫的图。
直接看图。
代码
library(grid) re=function(k, vp.list, el){ k=k-1 if(k&amp;lt;=0){ el() return(0) } for(vp in vp.list){ pushViewport(vp) re(k-1, vp.list, el) upViewport() } } # 模拟三台摄影机 vp1 = viewport(x=1/4, y=1/4, w=1/2, h=1/2, angle=170) vp2 = viewport(x=3/4, y=1/4, w=1/2, h=1/2, angle=70) vp3 = viewport(x=1/2, y=3/4, w=1/2, h=1/2, angle=110) grid.newpage() re(13, vp.list = list(vp1, vp2, vp3), function()grid.polygon(c(0, 1, .5), c(0, 0, 1), gp=gpar(col=&amp;quot;green&amp;quot;))) # 五台摄影机 vp1 = viewport(x=1/6, y=1/6, w=1/3, h=1/3) vp2 = viewport(x=5/6, y=1/6, w=1/3, h=1/3) vp3 = viewport(x=1/6, y=5/6, w=1/3, h=1/3) vp4 = viewport(x=5/6, y=5/6, w=1/3, h=1/3) vp5 = viewport(x=1/2, y=1/2, w=1/3, h=1/3) grid.</description>
    </item>
    
  </channel>
</rss>